import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:isl_kids_app/src/features/authentication/repository/authentication_repository.dart';

import 'firebase_options.dart'; // Auto-generated by FlutterFire CLI

// Theme imports
import 'src/utils/theme/theme.dart';
import 'src/utils/theme/theme_controller.dart';

// Authentication screens
import 'src/features/authentication/screens/welcome/welcome_screen.dart';
import 'src/features/authentication/screens/auth_wrapper.dart';
import 'src/features/authentication/screens/login/login_screen.dart';
import 'src/features/authentication/screens/signup/signup_screen.dart';
import 'src/features/authentication/screens/dashboard/dashboard.dart';

// Controllers
import 'src/features/authentication/controllers/profile_image_controller.dart';

// Global navigator key for navigation control outside widget context
final GlobalKey<NavigatorState> navigatorKey = GlobalKey<NavigatorState>();

void main() {
  WidgetsFlutterBinding.ensureInitialized();
  runApp(const InitializationApp());
}

/// This widget handles Firebase initialization with loading & error UI.
class InitializationApp extends StatefulWidget {
  const InitializationApp({super.key});

  @override
  State<InitializationApp> createState() => _InitializationAppState();
}

class _InitializationAppState extends State<InitializationApp> {
  late Future<FirebaseApp> _firebaseInitialization;

  @override
  void initState() {
    super.initState();
    _firebaseInitialization = Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
  }

  @override
  Widget build(BuildContext context) {
    return FutureBuilder<FirebaseApp>(
      future: _firebaseInitialization,
      builder: (context, snapshot) {
        // Show loading spinner while waiting
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const MaterialApp(
            home: Scaffold(
              body: Center(child: CircularProgressIndicator()),
            ),
          );
        }
        // Show error UI if initialization failed
        else if (snapshot.hasError) {
          return MaterialApp(
            home: Scaffold(
              body: Center(
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    const Text(
                      'Failed to initialize Firebase.',
                      style: TextStyle(fontSize: 18, color: Colors.red),
                    ),
                    const SizedBox(height: 16),
                    ElevatedButton(
                      onPressed: () {
                        setState(() {
                          _firebaseInitialization = Firebase.initializeApp(
                              options: DefaultFirebaseOptions.currentPlatform);
                        });
                      },
                      child: const Text('Retry'),
                    ),
                  ],
                ),
              ),
            ),
          );
        }
        // Initialization successful - inject dependencies & launch app
        else {
          // Register GetX controllers after Firebase initialized
          Get.put(ThemeController());
          Get.put(ProfileImageController());
          Get.put(AuthenticationRepository());

          return const App();
        }
      },
    );
  }
}

class App extends StatelessWidget {
  const App({super.key});

  @override
  Widget build(BuildContext context) {
    final themeController = ThemeController.to;

    return Obx(
      () => GetMaterialApp(
        navigatorKey: navigatorKey,
        title: 'ISL Kids App',
        debugShowCheckedModeBanner: false,
        theme: TAppTheme.lightTheme,
        darkTheme: TAppTheme.darkTheme,
        themeMode: themeController.themeMode,
        home: const AuthWrapper(),
        getPages: [
          GetPage(name: '/welcome', page: () => const WelcomeScreen()),
          GetPage(name: '/login', page: () => const LoginScreen()),
          GetPage(name: '/signup', page: () => const SignUpScreen()),
          GetPage(name: '/dashboard', page: () => const Dashboard()),
        ],
      ),
    );
  }
}
